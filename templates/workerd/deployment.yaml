{{- /* templates/deployment.yaml */ -}}
{{- range .Values.workerd.workers }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workerd-{{ .name }}
  labels:
    app: workerd
    worker: {{ .name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workerd
      worker: {{ .name }}
  template:
    metadata:
      labels:
        app: workerd
        worker: {{ .name }}
    spec:
      initContainers:
        - name: init-{{ .name }}
          image: "{{ .image }}"
          volumeMounts:
            - name: worker-files
              mountPath: /app/worker
            {{- if .durableObjects.enabled }}
            - name: worker-data
              mountPath: /app/worker/data
            {{- end }}
      containers:
        - name: workerd
          image: "{{ $.Values.workerd.image.repository }}:{{ $.Values.workerd.image.tag }}"
          ports:
            - containerPort: {{ $.Values.workerd.service.port }}
          command:
            - /usr/bin/workerd
          args:
            - "--verbose"
            - "serve"
            - "/app/config.capnp"
          imagePullPolicy: {{ $.Values.workerd.image.pullPolicy }}
          volumeMounts:
            # Mount the worker-specific ConfigMap to provide /app/config.capnp.
            - name: config
              mountPath: /app/config.capnp
              subPath: config.capnp
            # Mount the shared volume at /app/worker so the embedded file is found.
            - name: worker-files
              mountPath: /app/worker
            {{- if .durableObjects.enabled }}
            - name: worker-data
              mountPath: /app/worker/data
            {{- end }}
      volumes:
        # Volume for the worker-specific configuration.
        - name: config
          configMap:
            name: workerd-config-{{ .name }}
        # Shared volume for copying the worker's main.js.
        - name: worker-files
          emptyDir: {}
        {{- if .durableObjects.enabled }}
        # Persistent volume for worker data
        - name: worker-data
          persistentVolumeClaim:
            claimName: workerd-data-{{ .name }}
        {{- end }}
---
{{- if .durableObjects.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: workerd-data-{{ .name }}
  labels:
    app: workerd
    worker: {{ .name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .durableObjects.storageSize }}
---
{{- end }}
{{- end }}
